//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TwitchToLeagueChat.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.6.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string TwitchBotUsername {
            get {
                return ((string)(this["TwitchBotUsername"]));
            }
            set {
                this["TwitchBotUsername"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string TwitchBotKey {
            get {
                return ((string)(this["TwitchBotKey"]));
            }
            set {
                this["TwitchBotKey"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LeagueUsername {
            get {
                return ((string)(this["LeagueUsername"]));
            }
            set {
                this["LeagueUsername"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LeaguePassword {
            get {
                return ((string)(this["LeaguePassword"]));
            }
            set {
                this["LeaguePassword"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LeagueServer {
            get {
                return ((string)(this["LeagueServer"]));
            }
            set {
                this["LeagueServer"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string TwitchMinimumLevel {
            get {
                return ((string)(this["TwitchMinimumLevel"]));
            }
            set {
                this["TwitchMinimumLevel"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string SummonerName {
            get {
                return ((string)(this["SummonerName"]));
            }
            set {
                this["SummonerName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string TwitchChannelName {
            get {
                return ((string)(this["TwitchChannelName"]));
            }
            set {
                this["TwitchChannelName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Filter {
            get {
                return ((string)(this["Filter"]));
            }
            set {
                this["Filter"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Whitelist {
            get {
                return ((string)(this["Whitelist"]));
            }
            set {
                this["Whitelist"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Blacklist {
            get {
                return ((string)(this["Blacklist"]));
            }
            set {
                this["Blacklist"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"!:Start With,anal:Contains,anus:Contains,arse:Contains,ass:Contains,ballsack:Contains,balls:Contains,bastard:Contains,bitch:Contains,biatch:Contains,bloody:Contains,blowjob:Contains,blow job:Contains,bollock:Contains,bollok:Contains,boner:Contains,boob:Contains,bugger:Contains,bum:Contains,butt:Contains,buttplug:Contains,clitoris:Contains,cock:Contains,coon:Contains,crap:Contains,cunt:Contains,damn:Contains,dick:Contains,dildo:Contains,dyke:Contains,fag:Contains,feck:Contains,fellate:Contains,fellatio:Contains,felching:Contains,fuck:Contains,f u c k:Contains,fudgepacker:Contains,fudge packer:Contains,flange:Contains,Goddamn:Contains,God damn:Contains,hell:Contains,homo:Contains,jerk:Contains,jizz:Contains,knobend:Contains,knob end:Contains,labia:Contains,muff:Contains,nigger:Contains,nigga:Contains,omg:Contains,penis:Contains,piss:Contains,poop:Contains,prick:Contains,pube:Contains,pussy:Contains,queer:Contains,scrotum:Contains,sex:Contains,shit:Contains,s hit:Contains,sh1t:Contains,slut:Contains,smegma:Contains,spunk:Contains,tit:Contains,tosser:Contains,turd:Contains,twat:Contains,vagina:Contains,wank:Contains,whore:Contains,wtf:Contains,fuc:Contains,fuk:Contains,fking:Contains,fcking:Contains,fucking:Contains")]
        public string Bannedwords {
            get {
                return ((string)(this["Bannedwords"]));
            }
            set {
                this["Bannedwords"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("C:\\Riot Games\\League of Legends")]
        public string LeaguePath {
            get {
                return ((string)(this["LeaguePath"]));
            }
            set {
                this["LeaguePath"] = value;
            }
        }
    }
}
